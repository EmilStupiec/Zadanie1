package emil.stupiec;

import java.util.ArrayList;

public class Calculator {
	Calculator(){}
	
	public Integer add(String inString) throws NegativeValuesPassed{
		if(inString.isEmpty())
			return 0;
		else
			return sumOfPassedValues(inString);
	}
	private Integer sumOfPassedValues(String inString) throws NegativeValuesPassed{
		if(inString.matches("^-?(\\d)+$")){
			String[] numbersSplited=new String[1];
			numbersSplited[0]=inString;
			return sumNumbers(numbersSplited);
		}else{
			String matcher=prepareMatcher(inString);
			if(inString.startsWith("//"))
				inString=inString.substring(4);
			return sumNumbers(inString.split(matcher));
		}
	}
	private Integer sumNumbers(String[] numbersSplited) throws NegativeValuesPassed{
		Integer sum=0;
		for(String s: numbersSplited){
			if(Integer.parseInt(s)<0){
				checkForOtherNegativesAndThrowException(numbersSplited);
			}else
			sum+=Integer.parseInt(s);
		}	
	return sum;
	}
	private void checkForOtherNegativesAndThrowException(String[] numbersSplited) throws NegativeValuesPassed{
		ArrayList<Integer> negatives=new ArrayList<Integer>();
		for(String s: numbersSplited){
			if(Integer.parseInt(s)<0)
				negatives.add(Integer.parseInt(s));
		}
		NegativeValuesPassed negative_values_passed=new NegativeValuesPassed("negatives not allowed\nnegatives passed:",negatives);
		throw negative_values_passed;
	}
	private String prepareMatcher(String inString){
		String stringMatcher="[(,)(\n)";
		if(inString.matches("^//"+inString.charAt(2)+"([(,)(\n)"+inString.charAt(2)+"]-?\\d+)+")){
			stringMatcher=stringMatcher+"("+inString.charAt(2)+")]";
		}else
			stringMatcher+="]";
		return stringMatcher;
	}
}
